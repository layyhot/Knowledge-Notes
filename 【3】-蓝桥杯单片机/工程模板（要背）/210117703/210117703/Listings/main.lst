C51 COMPILER V9.59.0.0   MAIN                                                              04/15/2024 16:46:49 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE ..\User\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Deriver;..\Sys;..\User) 
                    -DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include <stdio.h>
   3          #include <intrins.h>
   4          #include "init_cls_der.h"
   5          #include "dsp_led.h"
   6          #include "dsp_seg.h"
   7          #include "key.h"
   8          #include "timer.h"
   9          #include "timer0_555.h"
  10          //#include "timer0_PWM.h"
  11          
  12          #include "onewire.h"
  13          #include "ds1302.h"
  14          #include "iic.h"
  15          
  16          //三大金刚
  17          void Led_Pro(void);
  18          void Seg_Pro(void);
  19          void Key_Pro(void);
  20          void Delay750ms(void);
  21          
  22          sbit PWM_Cont = P3^4;
  23          
  24          //LED变量
  25          unsigned char ucled;
  26          
  27          //SEG变量
  28          unsigned char seg_str[10], pos;
  29          unsigned char seg_buf[8] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
  30          
  31          //KEY变量
  32          unsigned char key_value;
  33          unsigned char key_down, key_old;
  34          
  35          //定时器延时变量
  36          unsigned long ms_dida;
  37          unsigned char Key_Slow_Down;
  38          unsigned int Seg_Slow_Down;
  39          unsigned char Led_Slow_Down;
  40          
  41          //555测频变量
  42          unsigned int freq;
  43          
  44          ////PWM变量
  45          //unsigned char PWM_Num;
  46          
  47          //温度变量--可以用，可不用
  48          float temperature;
  49          
  50          //DS1302时间模块
  51          unsigned char uRtc[3] = {23, 59, 55};
  52          
  53          //IIC数据储存模块
  54          unsigned char EEPROM_str[4] = {1, 2, 3, 9};
C51 COMPILER V9.59.0.0   MAIN                                                              04/15/2024 16:46:49 PAGE 2   

  55          unsigned char ADC_User;
  56          
  57          //BOOL变量
  58          bit LED_Dsp_flag;
  59          bit Long_Down_flag;
  60          bit isDoubleClick;
  61          
  62          
  63          //自定义变量
  64          unsigned char us_key;
  65          unsigned long ms_Tick_isDoubleClick;
  66          
  67          int main()
  68          {
  69   1              Cls_Der();
  70   1              Timer1_Init();
  71   1      //      Timer0_Init();
  72   1              Freq_Timer0_Init_555();
  73   1              EA = 1;
  74   1              Read_Onewire();
  75   1              Write_Time(uRtc);
  76   1              
  77   1              
  78   1              Write_EEPROM(64, EEPROM_str, 4);
  79   1              
  80   1              us_key = 4;
  81   1              ucled = 0xaa;
  82   1              
  83   1              Delay750ms();
  84   1              
  85   1              while(1)
  86   1              {
  87   2                      Led_Pro();
  88   2                      Seg_Pro();
  89   2                      Key_Pro();
  90   2              }
  91   1              
  92   1      }
  93          
  94          //void Timer0_Isr(void) interrupt 1
  95          //{
  96          //      
  97          //      if(PWM_Num < 1)  {PWM_Cont = 1;Dsp_Led(0xff);}
  98          //      else {PWM_Cont = 0; Dsp_Led(0);}
  99          //      
 100          //      if(++PWM_Num >= 10)     {PWM_Num = 0;}
 101          //      `
 102          //}
 103          
 104          
 105          void Timer1_Isr(void) interrupt 3
 106          {
 107   1              ms_dida++;
 108   1              
 109   1              if(++ Key_Slow_Down == 10) Key_Slow_Down = 0;
 110   1              if(++ Seg_Slow_Down == 500) Seg_Slow_Down = 0;
 111   1              if(++ Led_Slow_Down == 100) Led_Slow_Down = 0;
 112   1              
 113   1              
 114   1              
 115   1              
 116   1                      
C51 COMPILER V9.59.0.0   MAIN                                                              04/15/2024 16:46:49 PAGE 3   

 117   1              
 118   1              Dsp_Seg(seg_buf, pos);
 119   1              if(++ pos == 8)  pos = 0;
 120   1              Dsp_Led(ucled);
 121   1              
 122   1              if(ms_dida%1000 == 0)
 123   1              {
 124   2                      freq = (TH0 << 8) | TL0;
 125   2                      TH0 = 0;
 126   2                      TL0 = 0;
 127   2              }
 128   1      }
 129          
 130          
 131          void Key_Pro(void)
 132          {
 133   1              if(Key_Slow_Down) return;
 134   1              Key_Slow_Down = 1;
 135   1              
 136   1              
 137   1              key_value = Scan_Key();
 138   1              key_down = key_value & (key_value ^ key_old);
 139   1              key_old = key_value;
 140   1              
 141   1              
 142   1              switch(key_down)
 143   1              {
 144   2                      case 7 :
 145   2                              LED_Dsp_flag ^= 1;
 146   2                              break;
 147   2                      case 6:
 148   2                              us_key = 6;
 149   2                              break;
 150   2                      case 5:
 151   2                              us_key = 5;
 152   2                              break;
 153   2                      case 11:
 154   2                              us_key = 11;
 155   2                              break;
 156   2                      case 10:
 157   2                              us_key = 10;
 158   2                              break;
 159   2                      case 15:
 160   2                              us_key = 15;
 161   2                              break;
 162   2                      case 17:
 163   2                              us_key = 17;
 164   2                              break;
 165   2                      case 19:
 166   2                              if (isDoubleClick) 
 167   2                              {
 168   3                                      // 第二次按键下降沿，执行双击事件的相应操作
 169   3                                      // 这里可以触发某个功能或执行其他操作
 170   3                                      us_key = 60;
 171   3                                      isDoubleClick = 0;  // 重置双击事件标志位
 172   3                              }
 173   2                              else 
 174   2                              {
 175   3                                      us_key = 61;
 176   3                                      isDoubleClick = 1;
 177   3                                      ms_Tick_isDoubleClick = ms_dida;
 178   3                              }
C51 COMPILER V9.59.0.0   MAIN                                                              04/15/2024 16:46:49 PAGE 4   

 179   2                              
 180   2                              break;
 181   2      //              default:
 182   2      //                      if(key_down != 0)       us_key = key_down;
 183   2      //                      break;
 184   2              }
 185   1              
 186   1              
 187   1              
 188   1              
 189   1              
 190   1              
 191   1              switch(key_old)//这个结构很常见，判别是哪个按键按下去了，根据按键按下的情况，控制内部数据变量的变化
 192   1              {
 193   2                      case 17:
 194   2                              if(us_key == 17)Long_Down_flag = 1;
 195   2                              break;
 196   2                      default:
 197   2                              if (ms_dida - ms_Tick_isDoubleClick > 200) isDoubleClick = 0;
 198   2                              Long_Down_flag = 0;
 199   2                              break;
 200   2              }
 201   1      }
 202          
 203          
 204          
 205          void Seg_Pro(void)
 206          {
 207   1              if(Seg_Slow_Down) return;
 208   1              Seg_Slow_Down = 1;
 209   1              
 210   1              
 211   1              switch(us_key)
 212   1              {
 213   2                      case 6:
 214   2                              Read_Time(uRtc);
 215   2                              sprintf(seg_str, "%02d-%02d-%02d", (unsigned int)uRtc[0], (unsigned int)uRtc[1], (unsigned int)uRtc[2])
             -;
 216   2                              break;
 217   2                      case 5:
 218   2                              sprintf(seg_str, "C11-%4.2f", (Read_Onewire()/16.0));
 219   2                              break;
 220   2                      case 11:
 221   2                              Read_EEPROM(64, EEPROM_str, 4);
 222   2                              sprintf(seg_str, "%02d-%02d-%02d", (unsigned int)EEPROM_str[1], (unsigned int)EEPROM_str[0], (unsigned 
             -int)EEPROM_str[0]);
 223   2                              
 224   2                              break;
 225   2                      case 10:
 226   2                              sprintf(seg_str, "AU---%03d", (unsigned int)(Read_ADC(0x43)));
 227   2                              break;
 228   2                      case 15:
 229   2                              sprintf(seg_str, "F--%5d", (unsigned int)freq);
 230   2                              break;
 231   2              
 232   2                      case 17:
 233   2                              if(Long_Down_flag) {sprintf(seg_str, "L0N-%4.2f", (Read_Onewire()/16.0));}
 234   2                              else sprintf(seg_str, "L0N--L0N");
 235   2                              break;
 236   2                      case 60:
 237   2                              sprintf(seg_str, "22-22-22");
 238   2                              break;
C51 COMPILER V9.59.0.0   MAIN                                                              04/15/2024 16:46:49 PAGE 5   

 239   2                      case 61:
 240   2                              sprintf(seg_str, "11-11-11");
 241   2                              break;
 242   2                      default:
 243   2                              sprintf(seg_str, "%02d123456", (unsigned int)us_key);
 244   2                              break;
 245   2              }
 246   1              
 247   1              Seg_Str_To_Buf(seg_str, seg_buf);
 248   1      }
 249          
 250          
 251          void Led_Pro(void)
 252          {
 253   1              if(Led_Slow_Down) return;
 254   1              Led_Slow_Down = 1;
 255   1              
 256   1              if(LED_Dsp_flag)
 257   1              {ucled = 0xff ^ ucled;}
 258   1              
 259   1              else if(us_key == 6)
 260   1              {ucled = 0xe7;}
 261   1              else if(us_key == 5)
 262   1              {ucled = 0xc3;}
 263   1      }
 264          
 265          
 266          void Delay750ms(void)   //@12.000MHz
 267          {
 268   1              unsigned char data i, j, k;
 269   1      
 270   1              i = 35;
 271   1              j = 51;
 272   1              k = 182;
 273   1              do
 274   1              {
 275   2                      do
 276   2                      {
 277   3                              while (--k);
 278   3                      } while (--j);
 279   2              } while (--i);
 280   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    823    ----
   CONSTANT SIZE    =     90    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     50    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
