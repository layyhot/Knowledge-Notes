C51 COMPILER V9.59.0.0   KEY                                                               04/15/2024 16:46:50 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Objects\key.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE ..\Deriver\key.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Deriver;..\Sys;..\User
                    -) DEBUG OBJECTEXTEND PRINT(.\Listings\key.lst) OBJECT(.\Objects\key.obj)

line level    source

   1          #include "key.h"
   2          
   3          unsigned char Scan_Key_BTN(void)
   4          {
   5   1              if(P30 == 0)    return 7;
   6   1              else if(P31 == 0)       return 6;
   7   1              else if(P32 == 0)       return 5;
   8   1              else if(P33 == 0)       return 4;
   9   1              else return 0;
  10   1      }
  11          
  12          
  13          
  14          //unsigned char Scan_Key(void)
  15          //{
  16          //      unsigned int key_new;
  17          //      unsigned char key_value;
  18          //      
  19          //      P42 = P35 = P34 = 1;
  20          //      P44 =0;
  21          //      key_new = P3 & 0x0f;
  22          //      
  23          //      P44 = P35 = P34 = 1;
  24          //      P42 =0;
  25          //      key_new = (key_new << 4 ) | (P3 & 0x0f);
  26          //      
  27          //      P42 = P44 = P34 = 1;
  28          //      P35 =0;
  29          //      key_new = (key_new << 4 ) | (P3 & 0x0f);
  30          //      
  31          //      P42 = P35 = P44 = 1;
  32          //      P34 =0;
  33          //      key_new = (key_new << 4 ) | (P3 & 0x0f);
  34          //      
  35          //      switch(~key_new)
  36          //      {
  37          //              case 0x8000 : key_value = 7; break;
  38          //              case 0x4000 : key_value = 6; break;
  39          //              case 0x2000 : key_value = 5; break;
  40          //              case 0x1000 : key_value = 4; break;
  41          //              
  42          //              case 0x0800 : key_value = 11; break;
  43          //              case 0x0400 : key_value = 10; break;
  44          //              case 0x0200 : key_value = 9; break;
  45          //              case 0x0100 : key_value = 8; break;
  46          //              
  47          //              case 0x0080 : key_value = 15; break;
  48          //              case 0x0040 : key_value = 14; break;
  49          //              case 0x0020 : key_value = 13; break;
  50          //              case 0x0010 : key_value = 12; break;
  51          //              
  52          //              case 0x0008 : key_value = 19; break;
  53          //              case 0x0004 : key_value = 18; break;
  54          //              case 0x0002 : key_value = 17; break;
C51 COMPILER V9.59.0.0   KEY                                                               04/15/2024 16:46:50 PAGE 2   

  55          //              case 0x0001 : key_value = 16; break;
  56          //              default : key_value = 0; break;
  57          //      }
  58          //      
  59          //      return key_value;       
  60          //}
  61          
  62          ////--¾ØÕó¼üÅÌ
  63          //unsigned char Scan_Key(void)
  64          //{
  65          //      unsigned int Key_New;
  66          //      unsigned char Key_Value;
  67          //      
  68          //      P44 = 0;P42 = 1;P35 = 1;P34 = 1;
  69          //      Key_New = P3 & 0X0F;
  70          //      
  71          //      P44 = 1;P42 = 0;P35 = 1;P34 = 1;
  72          //      Key_New = (Key_New<<4)|(P3 & 0X0F);
  73          //      
  74          //      P44 = 1;P42 = 1;P35 = 0;P34 = 1;
  75          //      Key_New = (Key_New<<4)|(P3 & 0X0F);
  76          //      
  77          //      P44 = 1;P42 = 1;P35 = 1;P34 = 0;
  78          //      Key_New = (Key_New<<4)|(P3 & 0X0F);
  79          //      
  80          //      switch(~Key_New)
  81          //      {
  82          //              case 0x8000: Key_Value = 4; break;
  83          //              case 0x4000: Key_Value = 5; break;      
  84          //              case 0x2000: Key_Value = 6; break;      
  85          //              case 0x1000: Key_Value = 7; break;      
  86          //      
  87          //              case 0x0800: Key_Value = 8; break;
  88          //              case 0x0400: Key_Value = 9; break;      
  89          //              case 0x0200: Key_Value = 10; break;     
  90          //              case 0x0100: Key_Value = 11; break;     
  91          
  92          //              case 0x0080: Key_Value = 12; break;
  93          //              case 0x0040: Key_Value = 13; break;     
  94          //              case 0x0020: Key_Value = 14; break;     
  95          //              case 0x0010: Key_Value = 15; break;                     
  96          //      
  97          //              case 0x0008: Key_Value = 16; break;
  98          //              case 0x0004: Key_Value = 17; break;     
  99          //              case 0x0002: Key_Value = 18; break;     
 100          //              case 0x0001: Key_Value = 19; break;                     
 101          //              default :  Key_Value = 0;
 102          //      }
 103          //      
 104          //      return Key_Value;
 105          //      
 106          //}
 107          
 108          
 109          
 110          unsigned char Scan_Key(void)
 111          {
 112   1              unsigned char key_value;
 113   1              unsigned int key_now;
 114   1              
 115   1              P42 = P35 = P34 = 1;
 116   1              P44 = 0;
C51 COMPILER V9.59.0.0   KEY                                                               04/15/2024 16:46:50 PAGE 3   

 117   1              key_now = (P3 & 0x0f);
 118   1              
 119   1              P44 = P35 = P34 = 1;
 120   1              P42 = 0;
 121   1              key_now = (P3 & 0x0f) | (key_now << 4);
 122   1              
 123   1              P44 = P42 = P34 = 1;
 124   1              P35 = 0;
 125   1              key_now = (P3 & 0x0f) | (key_now << 4);
 126   1              
 127   1              P44 = P42 = P35 = 1;
 128   1              P34 = 0;
 129   1              key_now = (P3 & 0x0f) | (key_now << 4);
 130   1              
 131   1              switch(~key_now)
 132   1              {
 133   2                      case 0x8000: key_value = 4; break;
 134   2                      case 0x4000: key_value = 5; break;      
 135   2                      case 0x2000: key_value = 6; break;      
 136   2                      case 0x1000: key_value = 7; break;      
 137   2              
 138   2                      case 0x0800: key_value = 8; break;
 139   2                      case 0x0400: key_value = 9; break;      
 140   2                      case 0x0200: key_value = 10; break;     
 141   2                      case 0x0100: key_value = 11; break;     
 142   2      
 143   2                      case 0x0080: key_value = 12; break;
 144   2                      case 0x0040: key_value = 13; break;     
 145   2                      case 0x0020: key_value = 14; break;     
 146   2                      case 0x0010: key_value = 15; break;                     
 147   2              
 148   2                      case 0x0008: key_value = 16; break;
 149   2                      case 0x0004: key_value = 17; break;     
 150   2                      case 0x0002: key_value = 18; break;     
 151   2                      case 0x0001: key_value = 19; break;                     
 152   2                      default :  key_value = 0;
 153   2              }
 154   1              
 155   1              return key_value;
 156   1                      
 157   1              
 158   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    290    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
